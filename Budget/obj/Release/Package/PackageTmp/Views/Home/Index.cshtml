@model Budget.Models.Household
@{
    ViewBag.Title = "Home Page";
}

<br /><br />
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Accounts
                    <div class="pull-right">
                        @Html.ActionLink("Create New", "Create", "BankAccounts", new { @class = "btn btn-sm btn-default heading-button" })
                    </div>
                </div>
                <div class="panel-body">
                    <table class="table">
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                                Balance
                            </th>

                            <th></th>
                        </tr>

                        @foreach (var item in Model.Accounts)
                        {
                            if (!item.IsArchived)
                            {
                                <tr>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        $@Html.DisplayFor(modelItem => item.Balance)
                                    </td>
                                    <td>
                                        @Html.ActionLink("Edit", "Edit", "BankAccounts", new { id = item.Id }, new { @class = "btn btn-primary" })
                                        @Html.ActionLink("Details", "Details", "BankAccounts", new { id = item.Id }, new { @class = "btn btn-primary" })
                                        @Html.ActionLink("Add transaction", "Create", "Transactions", new { id = item.Id }, new { @class = "btn btn-primary" })
                                    </td>
                                </tr>
                            }
                        }


                    </table>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Spending
                </div>
                <div class="panel-body">
                    <div id="spending-chart" style="height: 250px;" class="col-md-12">

                    </div>
                </div>
            </div>
        </div>
    </div>
<div class="row">
    <div class="col-md-6">
        <div>
            @Html.Action("_RecentTransactions")
        </div>
    </div>
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                Monthly Budgets
            </div>

            <div class="panel-body">
                <div id="MyChart" style="height: 250px;" class="col-md-12">

                </div>
            </div>

        </div>
    </div>

</div>


@section scripts{
    <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
    <script type="text/javascript">
    $(function () {

        $.post('@Url.Action("GetChart","Charts")').then(function (response) {
            var next = response.length;
            var budget = response[next - 1].b

            new Morris.Bar({
                element: 'MyChart',
                data: response,
                xkey: 'y',
                ykeys: ['a', 'b'],
                barColors: function (row, series, type) {

                    console.log(row);
                    console.log(series);

                    if (series.index == 0) {

                        if (row.y > budget) {

                            return '#F00';
                        } else {

                            return '#000';
                        }


                    } else if (series.index == 1) {
                        budget = row.y;
                        return '#7A92A3';
                    }

                },
                labels: ['Total', 'Budget'],
                hideHover: false
            });
        });

    });
    </script>
<script type="text/javascript">
    $(function () {

        $.post('@Url.Action("SpendingChart","Charts")').then(function (response) {
            new Morris.Donut({
                element: 'spending-chart',
                data: response
            });
        });

    });
</script>
}